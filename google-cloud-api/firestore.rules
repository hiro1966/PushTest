rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================
    // 開発環境用（テスト用）
    // ========================================
    // 開発時のみ使用してください
    // 本番環境では下記の本番環境用ルールを使用してください
    /*
    match /{document=**} {
      allow read, write: if true;
    }
    */
    
    // ========================================
    // 本番環境用（推奨）
    // ========================================
    
    // ユーザーコレクション
    match /users/{userId} {
      // 認証済みユーザーは自分のドキュメントを読み書き可能
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Cloud Functions用（サーバー側認証）
      // すべての認証済みリクエストから読み取り可能
      allow read: if request.auth != null;
      
      // 新規作成時の検証
      allow create: if request.auth != null 
                    && request.resource.data.keys().hasAll(['userId', 'phoneNumber'])
                    && request.resource.data.userId == userId;
      
      // 更新時の検証
      allow update: if request.auth != null 
                    && request.auth.uid == userId
                    && request.resource.data.userId == resource.data.userId;
    }
    
    // メッセージコレクション
    match /messages/{messageId} {
      // 自分宛のメッセージのみ読み取り可能
      allow read: if request.auth != null 
                  && request.auth.uid == resource.data.userId;
      
      // メッセージ作成（認証済みユーザーのみ）
      allow create: if request.auth != null
                    && request.resource.data.keys().hasAll(['userId', 'text', 'createdAt', 'read']);
      
      // 自分宛のメッセージのみ削除可能
      allow delete: if request.auth != null 
                    && request.auth.uid == resource.data.userId;
      
      // 既読フラグの更新のみ許可
      allow update: if request.auth != null 
                    && request.auth.uid == resource.data.userId
                    && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['read']);
    }
    
    // その他のコレクションはデフォルトで拒否
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
